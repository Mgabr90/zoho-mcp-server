version: '3.8'

services:
  # Zoho MCP Server
  zoho-mcp-server:
    build: .
    container_name: zoho-mcp-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
      - MULTI_CONFIG_ENABLED=true
      - MULTI_CONFIG_ENVIRONMENT=production
      - MULTI_CONFIG_PATH=/app/zoho-config.json
      # Zoho OAuth Configuration (set via Railway environment variables)
      - ZOHO_CLIENT_ID=${ZOHO_CLIENT_ID}
      - ZOHO_CLIENT_SECRET=${ZOHO_CLIENT_SECRET}
      - ZOHO_REFRESH_TOKEN=${ZOHO_REFRESH_TOKEN}
      - ZOHO_DATA_CENTER=${ZOHO_DATA_CENTER:-com}
      - ZOHO_BOOKS_ORGANIZATION_ID=${ZOHO_BOOKS_ORGANIZATION_ID}
      - ZOHO_SCOPES=${ZOHO_SCOPES:-ZohoCRM.modules.ALL,ZohoCRM.settings.ALL,ZohoBooks.fullaccess.all}
    ports:
      - "3000:3000"
    volumes:
      - ./zoho-config.json:/app/zoho-config.json:ro
    networks:
      - zoho-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AnythingLLM
  anythingllm:
    image: anythingllm/anythingllm:latest
    container_name: anythingllm
    restart: unless-stopped
    environment:
      - STORAGE_DIR=/app/server/storage
      - UID=1000
      - GID=1000
      - SERVER_PORT=3001
      # MCP Configuration for Zoho integration
      - MCP_SERVERS_ENABLED=true
      - MCP_ZOHO_SERVER_URL=http://zoho-mcp-server:3000
      - MCP_ZOHO_SERVER_NAME=zoho-crm-books
    ports:
      - "3001:3001"
    volumes:
      - anythingllm_storage:/app/server/storage
      - anythingllm_uploads:/app/server/uploads
    networks:
      - zoho-network
    depends_on:
      zoho-mcp-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - zoho-network
    depends_on:
      - anythingllm
      - zoho-mcp-server

networks:
  zoho-network:
    driver: bridge

volumes:
  anythingllm_storage:
  anythingllm_uploads: 